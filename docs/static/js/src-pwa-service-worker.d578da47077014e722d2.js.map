{"version":3,"sources":["/Users/liliuyun/git/frontend-stories/src/pwa/service worker.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_liliuyun_git_frontend_stories_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","isMDXComponent"],"mappings":"qYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,6TACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sVACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,i1BAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iUACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iNACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,0QACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2FAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,gFACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,4DACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,kKAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0DADR,0DAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oMACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,6SACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,uDAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,ucAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACrBC,KAAQ,8FADT,yMAMPX,EAAWY,gBAAiB","file":"static/js/src-pwa-service-worker.13c576d5.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"service-worker\"\n    }}>{`Service Worker`}</h1>\n    <p>{`作为PWA的核心功能之一，sw受到了google的大力推广。在一年前iOS 11与Edge 17支持sw后，在主流浏览器里大范围应用sw成为了可能。`}</p>\n    <h2 {...{\n      \"id\": \"核心特性\"\n    }}>{`核心特性`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`独立线程： 这意味着sw不阻塞主线程的执行，同时在其中不能访问到DOM。另外，由于sw被设计为完全异步的，其中不允许使用localStorage。`}</li>\n      <li parentName=\"ul\">{`请求拦截： sw核心的资源缓存功能是采用监听、拦截浏览器请求和CacheStorage（基于Map<Request, Response>）来完成的。事实上，它类似一个代理服务器，我们可以用它来代理请求，无论是使用缓存还是其他数据源。这也是可以用它来实现离线Web应用的原因（历史上，我们使用appcache，即使用缓存资源清单manifest，这种手段在支持sw后已经被废弃）。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"生命周期\"\n    }}>{`生命周期`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`installing：注册阶段标志着注册行为的开始（通过navigator.serviceWorker。register来触发）。这个阶段用于初始化一些资源例如离线缓存清单。`}</li>\n      <li parentName=\"ul\">{`installed：表示sw的安装已经完成，等待客户端使用的其他worker关闭后即可激活新的sw。`}</li>\n      <li parentName=\"ul\">{`activating： 在没有其他sw控制客户端时，由installed阶段进入此阶段。这个阶段用于清除其他worker产生的缓存等。`}</li>\n      <li parentName=\"ul\">{`activated： 开始处理functional events。`}</li>\n      <li parentName=\"ul\">{`redundant： 被其他sw代替或取消注册sw。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"相关事件\"\n    }}>{`相关事件`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`生命周期相关事件： install，activate`}</li>\n      <li parentName=\"ul\">{`worker和主线程交互： message`}</li>\n      <li parentName=\"ul\">{`functional events： fetch、sync和push，分别用于处理请求资源、同步和推送。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"注意事项与常见问题\"\n    }}>{`注意事项与常见问题`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`HTTPS服务器：由于sw的强大作用，极易产生巨大的安全隐患，要求使用于HTTPS。`}</li>\n      <li parentName=\"ul\">{`没有拦截到请求：sw的作用域和所在目录一致，一般如果需要拦截所有请求需要将sw的文件serve到根目录下，即如/sw.js。`}</li>\n      <li parentName=\"ul\">{`sw文件不允许跨域。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"其他\"\n    }}>{`其他`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`优雅降级：如果浏览器不支持sw，可以无缝降级到正常的浏览器行为中去。如果不支持sw但是支持appcache，将正常使用appcache作为缓存。如果浏览器支持两者，则忽略appcache并且使用sw。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"相关链接\"\n    }}>{`相关链接`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\"\n      }}>{`MDN: Service Worker`}</a></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}